{"version":3,"sources":["pages/logo.png","pages/components/Checkbox.js","pages/ReviewForm.js","pages/metamask.svg","pages/components/AdminNavbar.js","pages/components/CollectorNavbar.js","pages/components/Navibar.js","pages/components/NavCol.js","pages/CollectionForm.js","pages/ForgotPassword.js","pages/Home.js","pages/Login.js","pages/Signup.js","pages/img.png","pages/confirmation/PasswordConfirm.js","pages/confirmation/SignupConfirm.js","pages/arrow-popout.svg","pages/Analytics.js","pages/confirmation/LoginConfirm.js","pages/Dash.js","pages/routes/AdminRoute.js","pages/routes/CollectorRoute.js","pages/confirmation/AlreadyLoggedin.js","pages/confirmation/LogoutConfirm.js","App.js","index.js"],"names":["Checkbox","React","forwardRef","ref","indeterminate","rest","defaultRef","useRef","resolveRef","useEffect","current","type","Reviewform","useState","wasteHash","setWasteHash","retrieve","setRetrieve","Account","setAccount","conStatePending","setconStatePending","window","ethereum","swal","title","text","icon","closeOnClickOutside","buttons","then","open","loadBlockchain","a","web3","Web3","eth","getAccounts","accounts","length","net","getId","StoreHashContract","Contract","Storehash","abi","data","JSON","stringify","SafeEnviro","selectedFlatRows","map","row","original","hexdata","toHex","Buffer","from","sendData","console","log","methods","store","send","response","blockId","blockNumber","transactionHash","TransData","axios","post","err","sqlMessage","setreviewStatus","message","button","location","reload","catch","call","COLUMNS","Header","accessor","Cell","initialValue","value","index","id","column","updateMyData","setValue","className","placeholder","onChange","e","target","onBlur","showDanger","setshowDanger","showSuccess","setshowSuccess","reviewStatus","reviewData","setreviewData","originalData","setoriginalData","skipPageReset","setSkipPageReset","get","result","columns","useMemo","useTable","autoResetPage","rowIndex","columnId","old","useRowSelect","hooks","visibleColumns","push","getToggleAllRowsSelectedProps","getToggleRowSelectedProps","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","refresh","setTimeout","Body","Title","Subtitle","bordered","hover","responsive","size","headerGroup","getHeaderGroupProps","headers","getHeaderProps","render","getRowProps","cells","cell","getCellProps","colSpan","variant","onClick","preventDefault","dangerMode","willDelete","savedData","localStorage","getItem","connect","parse","AdminNavbar","setrefresh","isMetaMask","setisMetaMask","networkType","setnetworkType","on","check","chainId","getNetworkType","NType","toUpperCase","setItem","islogout","setislogout","Navbar","expand","Container","Brand","href","alt","src","Logo","width","Toggle","Collapse","Nav","to","OverlayTrigger","placement","overlay","Tooltip","metalogo","request","method","activeClassName","clear","sessionStorage","document","cookie","split","forEach","c","replace","Date","toUTCString","CollectorNavbar","Navibar","NavCol","acctype","CollectionForm","startDate","setStartDate","collectionPoint","setcollectionPoint","wasteType","setwasteType","quantity","setquantity","collectedBy","setcollectedBy","collectingEquipment","setcollectingEquipment","collectionStatus","setcollectionStatus","selectedTimezone","setSelectedTimezone","Fdate","date","format","formdata","savedValues","formValues","formReset","Card","Form","onSubmit","collectionpoint","wastetype","collectedby","collectingequipment","zone","Row","Col","lg","md","sm","Group","controlId","Label","Control","required","name","Select","disabled","defaultValue","InputGroup","min","step","Text","selected","showTimeSelect","dateFormat","Alert","ForgotPassword","Home","Login","username","setusername","password","setpassword","LoginStatus","setLoginStatus","auth","setauth","islogged","setislogged","show","setshow","defaults","withCredentials","loggedIn","user","token","errno","autoComplete","exact","Signup","email","setemail","accounttype","setaccounttype","SigninStatus","setSigninStatus","RegStatus","setRegStatus","Feedback","PasswordConfirm","align","img","SignupConfirm","Analytics","field","headerName","sortable","renderCell","params","rel","ArrowPopout","fluid","autoHeight","pageSize","LoginConfirm","Dash","AdminRoute","Component","component","isAuth","props","pathname","state","CollectorRoute","AlreadyLoggedin","LogoutConfirm","App","path","ReviewForm","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bcc4cc20.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.e25a43af.png\";","import React from 'react';\r\n\r\nexport const Checkbox = React.forwardRef(({ indeterminate, ...rest }, ref) =>{\r\n    const defaultRef =React.useRef();\r\n    const resolveRef = ref || defaultRef;\r\n\r\n    React.useEffect(() => {\r\n        resolveRef.current.indeterminate = indeterminate;\r\n    },[resolveRef, indeterminate])\r\n\r\n    return (\r\n        <>\r\n            <input type='checkbox' ref={resolveRef} {...rest} />\r\n        </>\r\n    )\r\n})","import React, {useEffect, useState, useMemo} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Table from 'react-bootstrap/Table';\r\nimport axios from 'axios';\r\nimport './App.css';\r\nimport { useTable, useRowSelect } from 'react-table';\r\nimport { Checkbox } from './components/Checkbox';\r\nimport NavCol from './components/NavCol';\r\nimport swal from 'sweetalert';\r\nimport Storehash from './../contracts/Storehash.json';\r\nimport Web3 from 'web3';\r\nimport toHex from 'to-hex';\r\n\r\n\r\n\r\nfunction Reviewform() {\r\n    \r\n    const [wasteHash, setWasteHash] = useState();\r\n    const [retrieve, setRetrieve] = useState();\r\n    const [Account, setAccount] = useState();\r\n    const [conStatePending, setconStatePending] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const pro =  () => {\r\n            // const provider = await detectEthereumProvider();\r\n            if (window.ethereum) {\r\n\r\n            } else {\r\n                swal({\r\n                    title: \"Non ethereum browser detected!\",\r\n                    text: \"Please Install Metamask to Continue\",\r\n                    icon: \"warning\",\r\n                    closeOnClickOutside: false,\r\n                    buttons: \"Continue\",\r\n                }).then(() => {\r\n                    window.open('https://metamask.io/download','_blank');\r\n                });\r\n                return;\r\n            }\r\n        }\r\n        pro();\r\n    },[]);\r\n\r\n    useEffect(() => {\r\n        if(conStatePending){\r\n            swal({\r\n                title: \"Please Wait\",\r\n                text: \"The Transaction is being processed\",\r\n                icon: \"warning\",\r\n                buttons: false,\r\n                closeOnClickOutside: false,\r\n            });\r\n        }\r\n    }, [conStatePending])\r\n\r\n    const loadBlockchain = async () => { //contract delpoyed with ganach\r\n        // setLoading(true);\r\n        if(typeof window.ethereum == \"undefined\") {\r\n            swal({\r\n                title: \"Connection Error!\",\r\n                text: \"The Meta Mask is not connected\",\r\n                icon: \"warning\",\r\n                buttons: true,\r\n            });\r\n        }\r\n        const web3 = new Web3(window.ethereum);\r\n        const accounts = await web3.eth.getAccounts();\r\n        //setCurrentAccount(account);\r\n    \r\n        if (accounts.length === 0) {\r\n            swal({\r\n                title: \"Connection Error!\",\r\n                text: \"There are no Account connected\",\r\n                icon: \"warning\",\r\n                buttons: true,\r\n            });\r\n        }\r\n        setAccount(accounts[0]);\r\n        const networkId = await web3.eth.net.getId();\r\n        // const networkData = Storehash.networks[networkId];\r\n        // const Address = networkData.address\r\n        // console.log(networkData);\r\n    \r\n        if (networkId === 3) { // if we use current netorkId it deploy. if not like id == 42 it will not work\r\n            //   setLoading(false);\r\n            // console.log(Address);\r\n            const StoreHashContract = new web3.eth.Contract(Storehash.abi, '0xc0340ec7B5C59bB6649f7b37D23C4f97944aC504');\r\n            \r\n            const data = JSON.stringify({ SafeEnviro: selectedFlatRows.map((row) => row.original),},null, 2 );\r\n            const hexdata = (toHex(Buffer.from(data)));\r\n            const sendData = \"0x\"+ hexdata;\r\n            console.log(sendData);\r\n            console.log(data);\r\n            setconStatePending(true);\r\n            const wasteHash = await StoreHashContract.methods.store(sendData).send({from:accounts[0]}).then(\r\n                (response) => {\r\n                    setconStatePending(false);\r\n                    console.log(response);\r\n                    const blockId = response.blockNumber;\r\n                    const transactionHash = response.transactionHash;\r\n                    const rowdata = selectedFlatRows.map((row) => row.original);\r\n                    const TransData = [rowdata , blockId, transactionHash];\r\n                    console.log(TransData);\r\n                    //request to backend- database\r\n                    axios.post('http://localhost:3001/reviewsubmit', TransData).then(\r\n                        (response) => {\r\n                            if(!response.err){\r\n                                if(response.data.err){\r\n                                    if(response.data.err.sqlMessage){\r\n                                        swal({\r\n                                            title: \"Transaction Incomplete!\",\r\n                                            text: response.data.err.sqlMessage,\r\n                                            icon: \"warning\",\r\n                                        });\r\n                                    }else{\r\n                                        setreviewStatus();\r\n                                        swal({\r\n                                            title: \"Transaction Incomplete!\",\r\n                                            text: response.data.err,\r\n                                            icon: \"warning\",\r\n                                        });\r\n                                    }\r\n                                }else if(response.data.sqlMessage){\r\n                                    swal({\r\n                                        title: \"Transaction Incomplete!\",\r\n                                        text: response.data.sqlMessage,\r\n                                        icon: \"warning\",\r\n                                    });\r\n                                }else {\r\n                                    swal({\r\n                                        title: \"Transaction Complete!\",\r\n                                        text: response.data.message,\r\n                                        icon: \"success\",\r\n                                        closeOnClickOutside: false,\r\n                                        button: true,\r\n                                    }).then(() => {\r\n                                        window.location.reload();\r\n                                    });\r\n                                }\r\n                            } else {\r\n                                swal({\r\n                                    title: \"Transaction Incomplete!\",\r\n                                    text: response.data.err,\r\n                                    icon: \"warning\",\r\n                                });\r\n                            }\r\n                        }\r\n                    ).catch(\r\n                        (err) => {\r\n                            console.log(err);\r\n                            swal({\r\n                                title: \"Transaction Incomplete!\",\r\n                                text: err.message,\r\n                                icon: \"warning\",\r\n                            });\r\n                        }\r\n                    );\r\n                }\r\n            ).catch(\r\n                (err) => {\r\n                    setconStatePending(false);\r\n                    swal({\r\n                        title: \"Transaction Incomplete!\",\r\n                        text: err.message +\", this could also be due to insufficient funds or network congestions. Please resubmit the transaction.\",\r\n                        icon: \"warning\",\r\n                    });\r\n                }\r\n            )\r\n            setWasteHash(wasteHash);\r\n            const retrieve = await StoreHashContract.methods.retrieve().call();\r\n            setRetrieve(retrieve);\r\n        } else {\r\n            swal({\r\n                title: \"Network Error!\",\r\n                text: \"The contract is not detected by the network. Please ensure you're connected to the Ethereum Ropsten network through Metamask.\",\r\n                icon: \"warning\",\r\n                buttons: true,\r\n            });\r\n        }\r\n        console.log(wasteHash);\r\n        console.log(retrieve);\r\n        console.log(Account);\r\n    };\r\n    \r\n\r\n\r\n    // Create an editable cell renderer\r\n    const EditableCell = ({\r\n        value: initialValue,\r\n        row: { index },\r\n        column: { id },\r\n        updateMyData, // This is a custom function that we supplied to our table instance\r\n    }) => {\r\n        // We need to keep and update the state of the cell normally\r\n        const [value, setValue] = useState(initialValue)\r\n\r\n        const onChange = e => {\r\n        setValue(e.target.value)\r\n        }\r\n\r\n        // We'll only update the external data when the input is blurred\r\n        const onBlur = () => {\r\n        updateMyData(index, id, value)\r\n        }\r\n\r\n        // If the initialValue is changed external, sync it up with our state\r\n        useEffect(() => {\r\n        setValue(initialValue)\r\n        }, [initialValue])\r\n\r\n        return <input className=\"tipP\" placeholder=\"Insert Tipping Point\" value={value} onChange={onChange} onBlur={onBlur} />\r\n    }\r\n\r\n    // Set our editable cell renderer as the default Cell renderer\r\n    // const defaultColumn = {\r\n    //     Cell: EditableCell,\r\n    // }\r\n\r\n    const COLUMNS =[\r\n        {\r\n            Header : 'Id',\r\n            accessor: 'collectionid'\r\n        },\r\n        {\r\n            Header : 'Collection Point',\r\n            accessor: 'collectionpoint'\r\n        },\r\n        {\r\n            Header : 'Collected By',\r\n            accessor: 'collectedby'\r\n        },\r\n        {\r\n            Header : 'Waste Type',\r\n            accessor: 'wastetype'\r\n        },\r\n        {\r\n            Header : 'Collecting Equipment',\r\n            accessor: 'collectingequipment'\r\n        },\r\n        {\r\n            Header : 'Quantity',\r\n            accessor: 'quantity'\r\n        },\r\n        {\r\n            Header : 'Date & Time',\r\n            accessor: 'dateandtime'\r\n        },\r\n        {\r\n            Header: 'Tipping Point',\r\n            accessor: 'tippingpoint',\r\n            Cell : EditableCell\r\n        },\r\n    ]\r\n   \r\n    const [showDanger, setshowDanger] = useState(false);\r\n    const [showSuccess, setshowSuccess] = useState(false);\r\n    const [reviewStatus, setreviewStatus] = useState(\"\");\r\n    const [reviewData, setreviewData] = useState([]);\r\n    const [originalData,setoriginalData] = useState([]);\r\n    const [skipPageReset, setSkipPageReset] = useState(false);\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:3001/reviewform').then(\r\n            (response) => {\r\n                setreviewData( response.data.result);\r\n                setoriginalData( response.data.result);\r\n            }\r\n        ).catch(\r\n            (err) => {\r\n                console.log(err);\r\n                setshowDanger(true);\r\n                setreviewStatus(err.message);\r\n            }\r\n        )\r\n    },[])\r\n    \r\n\r\n    const updateMyData = (rowIndex, columnId, value) => {\r\n        // We also turn on the flag to not reset the page\r\n        setSkipPageReset(true)\r\n        setreviewData(old =>\r\n            old.map((row, index) => {\r\n            if (index === rowIndex) {\r\n                return {\r\n                ...old[rowIndex],\r\n                [columnId]: value,\r\n                }\r\n            }\r\n            return row\r\n            })\r\n        )\r\n    }\r\n    \r\n    useEffect(() => {\r\n        setSkipPageReset(false)\r\n    }, [reviewData])\r\n\r\n    \r\n    const resetData = () => setreviewData(originalData);\r\n\r\n    const columns = useMemo(() => COLUMNS, []);\r\n    // const data = useMemo(() => reviewData, []);\r\n\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        selectedFlatRows\r\n    } = useTable({\r\n        columns,\r\n        data:reviewData,\r\n        autoResetPage: !skipPageReset,\r\n        updateMyData,\r\n    },\r\n    useRowSelect,\r\n        (hooks) => {\r\n            hooks.visibleColumns.push((columns) => {\r\n                \r\n                return [\r\n                    ...columns,\r\n                    {\r\n                        id: 'selection',\r\n                        Header : ({ getToggleAllRowsSelectedProps }) => (\r\n                            <Checkbox {...getToggleAllRowsSelectedProps()} />\r\n                        ),\r\n                        Cell: ({ row }) => (\r\n                            <Checkbox {...row.getToggleRowSelectedProps()} />\r\n                        )\r\n                    }\r\n                ]\r\n            })\r\n        }\r\n    );\r\n\r\n\r\n    const removedata = e => {\r\n        e.preventDefault();\r\n        const data =  selectedFlatRows.map((row) => row.original);\r\n        if(data.length === 0){\r\n            setreviewStatus(\"Select data to be removed!\");\r\n            setshowDanger(true);\r\n            setTimeout(function(){setshowDanger(false)},5000);\r\n        } else {\r\n            swal({\r\n                title: \"Are you sure?\",\r\n                text: \"Once deleted, this data can not be recovered!\",\r\n                icon: \"warning\",\r\n                buttons: true,\r\n                dangerMode: true,\r\n                })\r\n                .then((willDelete) => {\r\n                if (willDelete) {\r\n                    axios.post('http://localhost:3001/removedata', data).then(\r\n                        (response) => {\r\n                            console.log(response);\r\n                            if(!response.err){\r\n                                if(response.data.err){\r\n                                    if(response.data.err.sqlMessage){\r\n                                        setreviewStatus(response.data.err.sqlMessage);\r\n                                        setshowDanger(true);\r\n                                        setTimeout(function(){setshowDanger(false)},5000);\r\n                                    }else{\r\n                                        setreviewStatus(response.data.err);\r\n                                        setshowDanger(true);\r\n                                        setTimeout(function(){setshowDanger(false)},5000);\r\n                                    }\r\n                                    \r\n                                } else {\r\n                                    setreviewStatus(response.data.message);\r\n                                    setshowSuccess(true);\r\n                                    // setTimeout(function(){setshowSuccess(false)},5000);\r\n                                    refresh();\r\n                                    setshowDanger(false);\r\n                                }\r\n                            } else {\r\n                                setreviewStatus(response.data.err);\r\n                                setshowDanger(true);\r\n                                setTimeout(function(){setshowDanger(false)},5000);\r\n                            }\r\n                        }\r\n                    ).catch(\r\n                        (err) => {\r\n                        console.log(err);\r\n                        setreviewStatus(err.message);\r\n                        setshowDanger(true);\r\n                        setTimeout(function(){setshowDanger(false)},5000);\r\n                        }\r\n                    )\r\n                } else {\r\n                    setreviewStatus(\"Your data is safe!\");\r\n                    setshowSuccess(true);\r\n                    setTimeout(function(){setshowSuccess(false)},5000);\r\n                }\r\n            });\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    const check = () => {\r\n        const savedData = localStorage.getItem('isMetaMask');\r\n        const connect = JSON.parse(savedData);\r\n        if (savedData){\r\n            if(connect === true){\r\n                const data =  selectedFlatRows.map((row) => row.original);\r\n                if(data.length === 0) {\r\n                    swal({\r\n                        title: \"Transaction Unable!\",\r\n                        text: \"Select one or more reviewed data to continue\",\r\n                        icon: \"warning\",\r\n                    });\r\n                }else{\r\n                    axios.post('http://localhost:3001/check', data).then(\r\n                        (response) => {\r\n                            if(response.data.message){\r\n                                loadBlockchain();\r\n                            } else if(response.data.err){\r\n                                setreviewStatus();\r\n                                swal({\r\n                                    title: \"Transaction Unable!\",\r\n                                    text: response.data.err,\r\n                                    icon: \"warning\",\r\n                                });\r\n                            }\r\n                        }\r\n                    ).catch(\r\n                        (err) => {\r\n                            swal({\r\n                                title: \"Transaction Unable!\",\r\n                                text: err.message,\r\n                                icon: \"warning\",\r\n                            });\r\n                        }\r\n                    )\r\n                }\r\n            }else{\r\n                swal({\r\n                    title: \"Connect to MetaMask!\",\r\n                    text: \"To complete this action metamask is needed\",\r\n                    icon: \"warning\",\r\n                });\r\n            }\r\n        }else{\r\n            swal({\r\n                title: \"Connect to MetaMask!\",\r\n                text: \"To complete this action metamask is needed\",\r\n                icon: \"warning\",\r\n            });\r\n        }\r\n    }\r\n\r\n    const refresh = () => {\r\n        setTimeout(function(){window.location.reload()},3500);\r\n    }\r\n      \r\n    return (\r\n        <div className=\"bg-light\">\r\n            <NavCol />\r\n            <Container className=\"justify-content-center col-lg-10 col-md-10 col-sm-12 card-div\">\r\n            <Card className=\"w-100\">\r\n                <Card.Body>\r\n                <Card.Title><h2>Waste collection review form</h2></Card.Title>\r\n                <Card.Subtitle className=\"mb-2 text-muted\">.</Card.Subtitle>\r\n                <Form className=\"wastereviewform\">\r\n                    <Row>\r\n                        <Col>\r\n                            <Table id=\"review-table\" bordered hover responsive size=\"sm\" {...getTableProps}>\r\n                                <thead>\r\n                                    {(headerGroups.map((headerGroup) =>(\r\n                                        <tr {...headerGroup.getHeaderGroupProps()}>\r\n                                            {headerGroup.headers.map((column) => (\r\n                                                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n                                            ))}\r\n                                        </tr>\r\n                                        )))\r\n                                    }\r\n                                </thead>\r\n                                <tbody className=\"reviewtbody\" {...getTableBodyProps}> \r\n                                    { rows.length > 0 ? (\r\n                                            rows.map((row) => {\r\n                                                prepareRow(row)\r\n                                                return (\r\n                                                    <tr {...row.getRowProps()}>\r\n                                                        {row.cells.map((cell) =>{\r\n                                                            return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                                                        })}\r\n                                                    </tr>\r\n                                                );\r\n                                            })\r\n                                        ):(\r\n                                            <tr>\r\n                                                <td colSpan=\"9\">\r\n                                                    <Alert variant=\"danger\" className=\"alert-div mb-0\">\r\n                                                        This Table doesn't have any data for now. \r\n                                                    </Alert>\r\n                                                </td>\r\n                                                \r\n                                            </tr>\r\n                                        )\r\n                                    }\r\n                                </tbody>\r\n                            </Table>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col className=\"flex justify-content-start\">\r\n                            <button className=\"btn-reset\" type=\"reset\" onClick={resetData}>RESET</button>\r\n                        </Col>\r\n                        <Col className=\"flex justify-content-end\">\r\n                            <button className=\"btn-rem\" onClick={removedata}>REMOVE DATA</button>\r\n                            <button className=\"btn-sub\" type=\"button\" onClick={check}>SUBMIT FORM</button>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"mt-3\">\r\n                        {showDanger && \r\n                            <Alert variant=\"danger\" className=\"alert-div\">\r\n                                {reviewStatus}\r\n                            </Alert>\r\n                            \r\n                        }\r\n                        {showSuccess && \r\n                            <Alert variant=\"success\" className=\"alert-div\">\r\n                                {reviewStatus}\r\n                            </Alert>\r\n                        }\r\n                    </Row>\r\n                </Form>\r\n                </Card.Body>\r\n            </Card>\r\n            </Container>\r\n            {/* <pre>\r\n                <code>\r\n                    {JSON.stringify(\r\n                        {\r\n                            selectedFlatRows: selectedFlatRows.map((row) => row.original),\r\n                        },\r\n                        null,\r\n                        2\r\n                    )}\r\n                </code>\r\n            </pre> */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Reviewform;\r\n","export default __webpack_public_path__ + \"static/media/metamask.4368e45a.svg\";","import React, { useState, useEffect } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Logo from './../logo.png';\r\nimport Container from 'react-bootstrap/Container';\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\nimport Web3 from 'web3';\r\nimport swal from 'sweetalert';\r\nimport metalogo from '../metamask.svg';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport '@metamask/detect-provider';\r\n\r\n\r\nfunction AdminNavbar() {\r\n\r\n\r\n    const [refresh, setrefresh] = useState(0);\r\n    const [isMetaMask, setisMetaMask] = useState();\r\n    const [Account, setAccount] = useState([]);\r\n    const [networkType, setnetworkType] = useState();\r\n\r\n    // const connect = window.ethereum.isConnected();\r\n    // useEffect(() => {\r\n    //     setisMetaMask(connect);\r\n    //     console.log(connect);\r\n    // },[connect]);\r\n    useEffect(() => {\r\n        const savedData = localStorage.getItem('isMetaMask');\r\n        if (savedData === 'undefined' ){\r\n            setisMetaMask(false);\r\n        }else{\r\n            setisMetaMask(JSON.parse(savedData));\r\n        }\r\n    },[]);\r\n    \r\nif(window.ethereum){\r\n    window.ethereum.on('accountsChanged', (accounts) => {\r\n      // Handle the new accounts, or lack thereof.\r\n      // \"accounts\" will always be an array, but it can be empty.\r\n        check();\r\n    });\r\n\r\n    window.ethereum.on('chainChanged', (chainId) => {\r\n      // Handle the new chain.\r\n      // Correctly handling chain changes can be complicated.\r\n      // We recommend reloading the page unless you have good reason not to.\r\n      check();\r\n    });\r\n}\r\n\r\n    const loadWeb3 = () => {\r\n        if (typeof window.ethereum !== 'undefined') {\r\n            window.ethereum.request({ method: 'eth_requestAccounts' }).then(\r\n                (response) => {\r\n                    swal({\r\n                        title: \"Connected to MetaMask!\",\r\n                        text: \"Successfully connected\",\r\n                        icon: \"success\",\r\n                    });\r\n                    setisMetaMask(true);\r\n                }\r\n            ).catch(\r\n                (err) => {\r\n                    swal({\r\n                        title: \"Not Connected to MetaMask!\",\r\n                        text: err.message,\r\n                        icon: \"warning\",\r\n                    });\r\n                    setisMetaMask(false);\r\n                }\r\n            )\r\n        }else {\r\n            swal({\r\n            title: \"Non ethereum browser detected!\",\r\n            text: \"Please Install Metamask to Continue\",\r\n            icon: \"warning\",\r\n            buttons: true,\r\n            });\r\n            setisMetaMask(false)\r\n        }\r\n    }\r\n\r\n\r\n    const check = async () =>{\r\n        if(isMetaMask === true){\r\n            setisMetaMask(true);\r\n            const web3 = new Web3(window.ethereum);\r\n            const accounts = await web3.eth.getAccounts();\r\n            if (accounts.length > 0){\r\n                const networkType = await web3.eth.net.getNetworkType();\r\n                const NType = networkType.toUpperCase();\r\n                setnetworkType(NType);\r\n                setAccount(accounts[0]);\r\n            }else{\r\n                setAccount(\"Not Connected\");\r\n                setisMetaMask(false);\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        check();\r\n        if(refresh === 1) {\r\n            setrefresh(0);\r\n        }\r\n    }, [refresh, isMetaMask]);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('isMetaMask', isMetaMask)\r\n    },[isMetaMask]);\r\n\r\n\r\n    const [islogout, setislogout] = useState(false);\r\n    const logout = () =>{\r\n        swal({\r\n            title: \"Are you sure?\",\r\n            text: \"Make sure you have finished your work!\",\r\n            icon: \"warning\",\r\n            buttons: true,\r\n            dangerMode: true,\r\n        }).then((willDelete) => {\r\n            if (willDelete) {\r\n                localStorage.clear();\r\n                sessionStorage.clear();\r\n                document.cookie.split(\";\").forEach((c) => {\r\n                    document.cookie = c\r\n                    .replace(/^ +/, \"\")\r\n                    .replace(/=.*/, \"=;expires=\" + new Date().toUTCString() + \";path=/\");\r\n                });\r\n                setislogout(true);\r\n            }\r\n        });\r\n    }\r\n    return (\r\n        <div>\r\n            {/* <Container>\r\n                <Nav className=\"justify-content-end topbar\">\r\n                    <Nav.Link href=\"#tel:\">On Call Support</Nav.Link>\r\n                    <Nav.Link href=\"#link\">Help</Nav.Link>\r\n                </Nav>\r\n            </Container> */}\r\n            <Navbar className=\"nav-div\" expand=\"lg\">\r\n                <Container>\r\n                    <Navbar.Brand href=\"/analytics\">\r\n                        <img\r\n                        alt=\"SafeEnviro\"\r\n                        src={Logo}\r\n                        width=\"120\"\r\n                        className=\"d-inline-block align-top\"\r\n                        />{' '}\r\n                    {/* SafeEnviro */}\r\n                    </Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse className=\" justify-content-end\"  id=\"basic-navbar-nav\">\r\n                        <Nav>\r\n                            <NavLink className=\"nav-link\" to=\"#\"><strong>Account: </strong>{Account}</NavLink>\r\n\r\n                            {isMetaMask === true ? (\r\n                                <OverlayTrigger\r\n                                    key='bottom-1'\r\n                                    placement='bottom'\r\n                                    overlay={\r\n                                        <Tooltip id='tooltip-connected'>\r\n                                            <strong>Connected</strong>.\r\n                                        </Tooltip>\r\n                                    }\r\n                                >\r\n                                    <button className=\"conweb\"><img className=\"metalogo\" alt=\"Meta Mask\" src={metalogo} /> {networkType}</button>\r\n                                </OverlayTrigger>\r\n                            ):(\r\n                                <OverlayTrigger\r\n                                    key='bottom-2'\r\n                                    placement='bottom'\r\n                                    overlay={\r\n                                        <Tooltip id='tooltip-Notconnect'>\r\n                                            <strong>Connect to MetaMask</strong>.\r\n                                        </Tooltip>\r\n                                    }\r\n                                >\r\n                                    <button className=\"conweb\" onClick={loadWeb3}>CONNECT TO  <img className=\"metalogo\" alt=\"Meta Mask\" src={metalogo} /></button>\r\n                                </OverlayTrigger>\r\n                            )}\r\n\r\n                            <NavLink className=\"nav-link hover\" activeClassName=\"active\" to=\"/analytics\">Analytics</NavLink>\r\n\r\n                            <NavLink className=\"nav-link hover\" activeClassName=\"active\" to=\"/reviewform\">Review Table</NavLink>\r\n\r\n                            <button className=\"signin\" onClick={logout}>SIGN OUT</button>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n            {islogout && <Redirect to=\"/logoutconfirm\" />}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AdminNavbar;","import React, { useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Logo from './../logo.png';\r\nimport Container from 'react-bootstrap/Container';\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\nimport swal from 'sweetalert';\r\n\r\n\r\nfunction CollectorNavbar() {\r\n    \r\n    const [islogout, setislogout] = useState(false);\r\n    const logout = () =>{\r\n        swal({\r\n            title: \"Are you sure?\",\r\n            text: \"Make sure you have finished your work!\",\r\n            icon: \"warning\",\r\n            buttons: true,\r\n            dangerMode: true,\r\n        }).then((willDelete) => {\r\n            if (willDelete) {\r\n                localStorage.clear();\r\n                sessionStorage.clear();\r\n                document.cookie.split(\";\").forEach((c) => {\r\n                    document.cookie = c\r\n                    .replace(/^ +/, \"\")\r\n                    .replace(/=.*/, \"=;expires=\" + new Date().toUTCString() + \";path=/\");\r\n                });\r\n                setislogout(true);\r\n            }\r\n        });\r\n    }\r\n    return (\r\n        <div>\r\n            {/* <Container>\r\n                <Nav className=\"justify-content-end topbar\">\r\n                    <Nav.Link href=\"#tel:\">On Call Support</Nav.Link>\r\n                    <Nav.Link href=\"#link\">Help</Nav.Link>\r\n                </Nav>\r\n            </Container> */}\r\n            <Navbar className=\"nav-div\" expand=\"lg\">\r\n                <Container>\r\n                    <Navbar.Brand href=\"/analytics\">\r\n                        <img\r\n                        alt=\"SafeEnviro\"\r\n                        src={Logo}\r\n                        width=\"120\"\r\n                        className=\"d-inline-block align-top\"\r\n                        />{' '}\r\n                    {/* SafeEnviro */}\r\n                    </Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse className=\" justify-content-end\"  id=\"basic-navbar-nav\">\r\n                        <Nav>\r\n                            <NavLink className=\"nav-link hover\" activeClassName=\"active\" to=\"/analytics\">Analytics</NavLink>\r\n\r\n                            <NavLink className=\"nav-link hover\" activeClassName=\"active\" to=\"/collectionform\">Collection Form</NavLink>\r\n\r\n                            <button className=\"signin\" onClick={logout}>SIGN OUT</button>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n            {islogout && <Redirect to=\"/logoutconfirm\" />}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CollectorNavbar;","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Logo from './../logo.png';\r\nimport Container from 'react-bootstrap/Container';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nfunction Navibar() {\r\n    return (\r\n        <div>\r\n            {/* <Container>\r\n                <Nav className=\"justify-content-end topbar\">\r\n                    <Nav.Link href=\"#tel:\">On Call Support</Nav.Link>\r\n                    <Nav.Link href=\"#link\">Help</Nav.Link>\r\n                </Nav>\r\n            </Container> */}\r\n            <Navbar className=\"nav-div\" expand=\"lg\">\r\n                <Container>\r\n                    <Navbar.Brand href=\"/\">\r\n                        <img\r\n                        alt=\"SafeEnviro\"\r\n                        src={Logo}\r\n                        width=\"120\"\r\n                        className=\"d-inline-block align-top\"\r\n                        />{' '}\r\n                    {/* SafeEnviro */}\r\n                    </Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse className=\" justify-content-end\"  id=\"basic-navbar-nav\">\r\n                        <Nav>\r\n                            {/* <NavLink className=\"nav-link hover\" activeClassName=\"active\" to=\"/collectionform\">Collection Form</NavLink>\r\n\r\n                            <NavLink className=\"nav-link hover\" activeClassName=\"active\" to=\"/reviewform\">Review Table</NavLink> */}\r\n\r\n                            <NavLink className=\"nav-link hover\" activeClassName=\"active\" to=\"/analytics\">Analytics</NavLink>\r\n\r\n                            <NavLink className=\"nav-link\" activeClassName=\"active\" to=\"/login\">\r\n                                <button className=\"signin\">SIGN IN</button>\r\n                            </NavLink>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navibar;","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport AdminNavbar from './AdminNavbar';\r\nimport CollectorNavbar from './CollectorNavbar';\r\nimport Navibar from './Navibar';\r\n\r\n\r\nfunction NavCol() {\r\n    const acctype = (sessionStorage.getItem(\"acctype\"));\r\n    const isAuth = (sessionStorage.getItem(\"isAuth\"));\r\n\r\n    if(isAuth){\r\n        if(acctype === \"Admin\"){\r\n            return(\r\n                <AdminNavbar />\r\n            );\r\n        } \r\n        if(acctype === \"Collector\") {\r\n            return(\r\n                <CollectorNavbar />\r\n            );\r\n        } \r\n    }else{\r\n        return(\r\n            <Navibar />\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavCol;","import React, {useEffect, useState} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport axios from 'axios';\r\n// import crypto from 'cryptojs';\r\nimport Container from 'react-bootstrap/Container';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Form from 'react-bootstrap/Form';\r\nimport './App.css';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport NavCol from './components/NavCol';\r\nimport TimezoneSelect from 'react-timezone-select';\r\nimport date from 'date-and-time';\r\n\r\nfunction CollectionForm() {\r\n\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [collectionPoint, setcollectionPoint] = useState(\"\");\r\n  const [wasteType, setwasteType] = useState(\"\");\r\n  const [quantity, setquantity] = useState(\"\");\r\n  const [collectedBy, setcollectedBy] = useState(\"\");\r\n  const [collectingEquipment, setcollectingEquipment] = useState(\"\");\r\n  const [collectionStatus, setcollectionStatus] = useState(\"\");\r\n  const [showDanger, setshowDanger] = useState(false);\r\n  const [showSuccess, setshowSuccess] = useState(false);\r\n  const [selectedTimezone, setSelectedTimezone] = useState('');\r\n\r\n  const Fdate = date.format(startDate, 'DD/MM/YYYY hh:mm A'); \r\n\r\n  useEffect(() => {\r\n    const formdata = window.localStorage.getItem('collection-data');\r\n    const savedValues = (JSON.parse(formdata));\r\n    if(savedValues){\r\n      setcollectionPoint(savedValues.collectionPoint);\r\n      setwasteType(savedValues.wasteType);\r\n      setquantity(savedValues.quantity);\r\n      setcollectedBy(savedValues.collectedBy);\r\n      setcollectingEquipment(savedValues.collectingEquipment);\r\n      setSelectedTimezone(savedValues.selectedTimezone);\r\n    }\r\n    \r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const formValues = {collectionPoint, wasteType, quantity,collectedBy, collectingEquipment, selectedTimezone}\r\n    window.localStorage.setItem('collection-data', JSON.stringify(formValues));\r\n  });\r\n\r\n  const formReset = e =>{\r\n    setcollectionPoint(\"\");\r\n    setwasteType(\"\");\r\n    setquantity(\"\");\r\n    setcollectedBy(\"\");\r\n    setcollectingEquipment(\"\");\r\n    setSelectedTimezone(\"\");\r\n  }\r\n\r\n  const collection = e => {\r\n    e.preventDefault();\r\n    const data ={\r\n      collectionpoint : collectionPoint,\r\n      wastetype : wasteType,\r\n      quantity : quantity,\r\n      collectedby : collectedBy,\r\n      collectingequipment : collectingEquipment,\r\n      date : Fdate,\r\n      zone : selectedTimezone\r\n    };\r\n    console.log(data);\r\n    axios.post('http://localhost:3001/collectionform', data).then(\r\n      (response) => {\r\n        console.log(response);\r\n        if(!response.err){\r\n          if(response.data.err){\r\n            setcollectionStatus(response.data.err.sqlMessage);\r\n            setshowDanger(true);\r\n            setTimeout(function(){setshowDanger(false)},5000);\r\n          } else {\r\n            localStorage.clear();\r\n            formReset();\r\n            setcollectionStatus(response.data.message);\r\n            setshowSuccess(true);\r\n            setTimeout(function(){setshowSuccess(false)},5000);\r\n          }\r\n        } else {\r\n          setcollectionStatus(response.data.err);\r\n          setshowDanger(false);\r\n          setTimeout(function(){setshowDanger(false)},5000);\r\n        }\r\n      }\r\n    ).catch(\r\n      (err) => {\r\n        console.log(err);\r\n        setcollectionStatus(err.message);\r\n        setshowDanger(true);\r\n        setTimeout(function(){setshowDanger(false)},5000);\r\n      }\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"bg-light\">\r\n      <NavCol />\r\n      <Container className=\"justify-content-center col-lg-9 col-md-10 col-sm-12 card-div\">\r\n        <Card className=\"w-100\">\r\n          <Card.Body>\r\n            <Card.Title><h2>Waste collection form</h2></Card.Title>\r\n            <Card.Subtitle className=\"mb-2 text-muted\">.</Card.Subtitle>\r\n            <Form className=\"wastecollectionform\" onSubmit={collection}>\r\n              <Row>\r\n                <Col lg={6} md={6} sm={12}> \r\n\r\n                  <Form.Group className=\"mb-3\" controlId=\"collectionPoint\">\r\n                    <Form.Label>Collection point</Form.Label>\r\n                    <Form.Control required type=\"text\" placeholder=\"Collection point\" name=\"collectionPoint\"\r\n                      onChange={e => setcollectionPoint(e.target.value)} value={collectionPoint}  />\r\n                  </Form.Group>\r\n\r\n                  <Form.Group className=\"mb-3\" controlId=\"wasteType\">\r\n                    <Form.Label>Waste type</Form.Label>\r\n                    <Form.Select required aria-label=\"Default select example\" name=\"wasteType\"\r\n                      onChange={e => {setwasteType(e.target.value)}} value={wasteType} >\r\n                      <option value=\"\" disabled defaultValue>Waste Type</option>\r\n                      <option value=\"Plastic\">Plastic</option>\r\n                      <option value=\"Food\">Food</option>\r\n                      <option value=\"Paper\">Paper</option>\r\n                    </Form.Select>\r\n                  </Form.Group>\r\n\r\n                  <Form.Label>Quantity</Form.Label>\r\n                  <InputGroup className=\"mb-3\">\r\n                    <Form.Control id=\"quantity\" required type=\"number\" min=\"0\" step=\"any\" placeholder=\"Quantity\" name=\"quantity\" aria-label=\"quantity\" aria-describedby=\"quantity\"\r\n                      onChange={e => {setquantity(e.target.value)}} value={quantity} />\r\n                    <InputGroup.Text id=\"quantity\">Kg</InputGroup.Text>\r\n                  </InputGroup>\r\n\r\n                </Col>\r\n                <Col  lg={6} md={6} sm={12}>\r\n\r\n                  <Form.Group className=\"mb-3\" controlId=\"collectedBy\">\r\n                    <Form.Label>Collected by</Form.Label>\r\n                    <Form.Control required type=\"text\" placeholder=\"Collected by\" name=\"collectedBy\"\r\n                      onChange={e => {setcollectedBy(e.target.value)}} value={collectedBy} />\r\n                  </Form.Group>\r\n\r\n                  <Form.Group className=\"mb-3\" controlId=\"collectingEquipment\">\r\n                    <Form.Label>Collecting equipment</Form.Label>\r\n                    <Form.Control required type=\"text\" placeholder=\"Collected equipment\" name=\"collectingEquipment\"\r\n                      onChange={e => {setcollectingEquipment(e.target.value)}} value={collectingEquipment} />\r\n                  </Form.Group>\r\n\r\n                  <Form.Group className=\"mb-3\" controlId=\"date\">\r\n                    <Row>\r\n                      <Col lg={8} md={6} sm={12}>\r\n                        <Form.Label>Date & time</Form.Label>\r\n                        <DatePicker className=\"form-control\" required name=\"date\" \r\n                          selected={startDate} onChange={(date) => setStartDate(date)} showTimeSelect dateFormat=\"Pp\" />\r\n                      </Col>\r\n                      <Col lg={4} md={6} sm={12} className=\"ps-0\">\r\n                        <Form.Label>Time Zone</Form.Label>\r\n                        <TimezoneSelect required placeholder=\"Time Zone\" value={selectedTimezone} onChange={setSelectedTimezone} />\r\n                      </Col>\r\n                    </Row>\r\n                  </Form.Group>\r\n                  \r\n                </Col>\r\n                \r\n              </Row>\r\n              <Row className=\"btn-div\">\r\n                <Col>\r\n                  <button className=\"btn-reset\" type=\"button\" onClick={formReset}>RESET</button>\r\n                  <button className=\"btn-submit w-45 mb-3\" type=\"submit\">SUBMIT FORM</button>\r\n                  {showDanger && \r\n                    <Alert variant=\"danger\" className=\"alert-div\">\r\n                      {collectionStatus}\r\n                    </Alert>\r\n                  }\r\n                  {showSuccess && \r\n                    <Alert variant=\"success\" className=\"alert-div\">\r\n                      {collectionStatus}\r\n                    </Alert>\r\n                  }\r\n                </Col>\r\n                \r\n              </Row>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CollectionForm;\r\n","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport { Link } from \"react-router-dom\";\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Form from 'react-bootstrap/Form';\r\nimport './App.css';\r\nimport NavCol from './components/NavCol';\r\n\r\nfunction ForgotPassword() {\r\n  return (\r\n    <div className=\"bg-light\">\r\n      <NavCol />\r\n      <Container className=\"justify-content-center card-div\">\r\n        <Card className=\"home-card\">\r\n          <Card.Body>\r\n            <Card.Title><h2>Forgot Password</h2></Card.Title>\r\n            <Card.Subtitle className=\"mb-2 text-muted\">.</Card.Subtitle>\r\n            <Form className=\"wastecollectionform\">\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"formGridAddress1\">\r\n                            <Form.Label>User Email</Form.Label>\r\n                            <Form.Control required type=\"email\" placeholder=\"Enter your Email\" name=\"username\" />\r\n                        </Form.Group>\r\n\r\n                        <button className=\"btn-signin\" type=\"submit\">Reset Password</button>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <p className=\"bottom-para mt-3\">\r\n                            Don't have an account? <Link to=\"/signup\">Signup</Link>\r\n                    </p>\r\n                </Row>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ForgotPassword;\r\n","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport { Link } from 'react-router-dom';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Logo from './logo.png';\r\nimport './App.css';\r\nimport NavCol from './components/NavCol';\r\n\r\nfunction Home() {\r\n  \r\n\r\n  return (\r\n    <div className=\"h-100\">\r\n      <NavCol />\r\n      <Container className=\"justify-content-center card-div\">\r\n        <Card className=\"home-card\">\r\n          <Card.Body>\r\n            <Form className=\"wastecollectionform\">\r\n              <Row>\r\n                <Col>\r\n                    <Row className=\"flex justify-content-center\">\r\n                        <img\r\n                            alt=\"SafeEnviro\"\r\n                            src={Logo}\r\n                            className=\"home-logo\"\r\n                        />\r\n                    </Row>\r\n                    <h6 className=\"welcomemsg\">Welcome to SafeEnviro DAPP</h6>\r\n                    <Link to=\"/signup\">\r\n                      <button className=\"btn-signup\" type=\"submit\">SIGN UP</button>\r\n                    </Link>\r\n                    <Link to=\"/login\">\r\n                      <button className=\"btn-signin\" type=\"submit\">SIGN IN</button>\r\n                    </Link>\r\n                  \r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport axios from 'axios';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Form from 'react-bootstrap/Form';\r\nimport './App.css';\r\nimport NavCol from './components/NavCol';\r\n\r\n\r\nfunction Login(){\r\n  const [username, setusername] = useState(\"\");\r\n  const [password, setpassword] = useState(\"\");\r\n  const [LoginStatus, setLoginStatus] = useState(\"\");\r\n  const [auth,setauth] = useState(false);\r\n  const [islogged, setislogged] = useState(false);\r\n  const [show, setshow] = useState(false);\r\n  \r\n  axios.defaults.withCredentials = true;\r\n\r\n  const login = e => {\r\n    e.preventDefault();\r\n    const data ={\r\n      username : username,\r\n      password : password\r\n    };\r\n    axios.post('http://localhost:3001/login', data).then(\r\n      (response) => {\r\n        if(!response.data.auth){\r\n          setshow(true);\r\n          console.log(response);\r\n          if(!response.data.err){\r\n            setLoginStatus(response.data.message);\r\n          }\r\n          if(response.data.err){\r\n            setLoginStatus(\"Database Connection Refused with Error Code: \"+response.data.err.errno);\r\n          }\r\n        }else{\r\n          sessionStorage.setItem(\"token\", response.data.token);\r\n          sessionStorage.setItem(\"user\", response.data.result[0].username);\r\n          sessionStorage.setItem(\"acctype\", response.data.result[0].type);\r\n          sessionStorage.setItem(\"isAuth\", response.data.auth);\r\n          setauth(true);\r\n        }\r\n      }\r\n    ).catch(\r\n      (err) => {\r\n        setLoginStatus(err.message);\r\n        console.log(err);\r\n        setshow(true);\r\n      }\r\n    )\r\n  }\r\n\r\n  useEffect(() => {\r\n    axios.get('http://localhost:3001/login').then(\r\n      (response) => {\r\n        if ( response.data.loggedIn === true){\r\n          sessionStorage.setItem(\"user\", response.data.user[0].username);\r\n          sessionStorage.setItem(\"acctype\", response.data.user[0].type);\r\n          sessionStorage.setItem(\"user\", response.data.user );\r\n          sessionStorage.setItem(\"isAuth\", response.data.auth);\r\n          setislogged(true);\r\n        }else{\r\n          console.log(response);\r\n        }\r\n      }\r\n    )\r\n  },[])\r\n\r\n  return (\r\n    <div className=\"bg-light\">\r\n      <NavCol />\r\n      <Container className=\"justify-content-center card-div\">\r\n        <Card className=\"home-card\">\r\n          <Card.Body>\r\n            <Card.Title><h2>Sign in to your account</h2></Card.Title>\r\n            <Card.Subtitle className=\"mb-2 text-muted\">.</Card.Subtitle>\r\n            <Form className=\"wastecollectionform\" onSubmit={login}>\r\n                <Row>\r\n                    <Col>\r\n                        {show && \r\n                          <Alert variant=\"danger\" className=\"alert-div\">\r\n                            {LoginStatus}\r\n                          </Alert>\r\n                        }\r\n                        <Form.Group className=\"mb-3\" controlId=\"username\">\r\n                            <Form.Label>User Name</Form.Label>\r\n                            <Form.Control required type=\"text\" placeholder=\"User Name\" name=\"username\"\r\n                              onChange={e => {setusername(e.target.value)}} />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"mb-3\" controlId=\"password\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control required type=\"password\" placeholder=\"Password\" name=\"password\" autoComplete=\"username current-password\"\r\n                              onChange={e => {setpassword(e.target.value)}} />\r\n                        </Form.Group>\r\n\r\n                        <p className=\"bottom-para\">\r\n                          Forgot the password? <Link to=\"/forgotpassword\">Reset</Link>\r\n                        </p>\r\n                        \r\n                        <button className=\"btn-signin\" type=\"submit\">SIGN IN</button>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <p className=\"bottom-para mt-3\">\r\n                            Don't have an account? <Link to=\"/signup\">Signup</Link>\r\n                    </p>\r\n                </Row>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n      </Container>\r\n      {auth && <Redirect exact to=\"/loginconfirm\" />}\r\n      {islogged && <Redirect exact to=\"/alreadyloggedin\" />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;","import React, { useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Form from 'react-bootstrap/Form';\r\nimport NavCol from './components/NavCol';\r\nimport './App.css';\r\n\r\nfunction Signup() {\r\n\r\n  const [email, setemail] = useState(\"\");\r\n  const [username, setusername] = useState(\"\");\r\n  const [password, setpassword] = useState(\"\");\r\n  const [accounttype, setaccounttype] = useState(\"\");\r\n  const [SigninStatus, setSigninStatus] = useState(\"\");\r\n  const [RegStatus, setRegStatus] = useState(false);\r\n  const [show, setshow] = useState(false);\r\n  \r\n\r\n  const signup = (e) => {\r\n      e.preventDefault();\r\n      const data ={\r\n        username : username,\r\n        email : email,\r\n        password : password,\r\n        type : accounttype\r\n      };\r\n      console.log(data);\r\n      axios.post('http://localhost:3001/signup', data).then(\r\n        (response) => {\r\n          console.log(response);\r\n          if(!response.err){\r\n            if(response.data.err){\r\n              setSigninStatus(\"This User Name is already in use.\");\r\n              setRegStatus(false);\r\n              setshow(true);\r\n            } else {\r\n              setRegStatus(true);\r\n            }\r\n          } else {\r\n            setSigninStatus(response.data.err);\r\n            setRegStatus(false);\r\n            setshow(true);\r\n          }\r\n        }\r\n      ).catch(\r\n        (err) => {\r\n          console.log(err.message);\r\n          setshow(true);\r\n        }\r\n      )\r\n    \r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-light\">\r\n      <NavCol />\r\n      <Container className=\"justify-content-center card-div\">\r\n        <Card className=\"home-card\">\r\n          <Card.Body>\r\n            <Card.Title><h2>Create an account</h2></Card.Title>\r\n            <Card.Subtitle className=\"mb-2 text-muted\">.</Card.Subtitle>\r\n            <Form className=\"wastecollectionform\"  onSubmit={signup}>\r\n                <Row>\r\n                    <Col>\r\n                        {show && \r\n                          <Alert variant=\"danger\" className=\"alert-div\">\r\n                            {SigninStatus}\r\n                          </Alert>\r\n                        }\r\n                        <Form.Group className=\"mb-3\" controlId=\"email\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control required type=\"email\" placeholder=\"Your Email\" name=\"email\" \r\n                              onChange={e => {setemail(e.target.value)}} />\r\n                              <Form.Control.Feedback type=\"invalid\">\r\n                              Please use a valid Email\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"mb-3\" controlId=\"name\">\r\n                            <Form.Label>User Name</Form.Label>\r\n                            <Form.Control required type=\"text\" placeholder=\"User Name\" name=\"name\" \r\n                              onChange={e => {setusername(e.target.value)}} />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                              Please choose a user name.\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"mb-3\" controlId=\"password\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control required type=\"password\" placeholder=\"Password\" name=\"password\" autoComplete=\"new-password\"\r\n                              onChange={e => {setpassword(e.target.value)}} />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                              Please choose a Password.\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"mb-3\" controlId=\"accounttype\">\r\n                            <Form.Label>Account Type</Form.Label>\r\n                            <Form.Select required aria-label=\"Default select example\" name=\"accounttype\"\r\n                              onChange={e => {setaccounttype(e.target.value)}} value={accounttype} >\r\n                                <option value=\"\" disabled defaultValue>Account Type</option>\r\n                                <option value=\"Admin\">Admin</option>\r\n                                <option value=\"Collector\">Collector</option>\r\n                            </Form.Select>\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                              Please choose the User Account Type.\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n\r\n                        <button className=\"btn-signin\" type=\"submit\">SIGN UP</button>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <p className=\"bottom-para my-3\">\r\n                            Already have an account? <Link to=\"/login\">Signin</Link>\r\n                    </p>\r\n                </Row>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n\r\n        {RegStatus && <Redirect to=\"/signupconfirm\" />}\r\n      </Container>\r\n    </div>\r\n  ); \r\n}\r\nexport default Signup;\r\n","export default __webpack_public_path__ + \"static/media/img.cd1cb391.png\";","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport { Link } from \"react-router-dom\";\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Form from 'react-bootstrap/Form';\r\nimport img from '../img.png'\r\nimport '../App.css';\r\nimport NavCol from '../components/NavCol';\r\n\r\n\r\nfunction PasswordConfirm() {\r\n  return (\r\n    <div className=\"bg-light\">\r\n      <NavCol />\r\n      <Container className=\"justify-content-center card-div\">\r\n        <Card className=\"home-card\">\r\n            <Card.Body>\r\n                <Card.Title align=\"center\">\r\n                    <img alt=\"Complete\" src={img} width=\"60\" className=\"pb-3\" /> <br />\r\n                    Confirmation Email has been sent!\r\n                </Card.Title>\r\n                <Card.Subtitle align=\"center\" className=\"mb-2 text-muted size-12\">Please check your email inbox and click on \"Reset Password\".</Card.Subtitle>\r\n                <Form>\r\n                    <Row>\r\n                        <Col>\r\n                          <Link to=\"/login\">\r\n                            <button className=\"btn-backtosignin\" type=\"submit\">BACK TO SIGN IN PAGE</button>\r\n                          </Link>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </Card.Body>\r\n        </Card>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PasswordConfirm;\r\n","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport { Link } from \"react-router-dom\";\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Form from 'react-bootstrap/Form';\r\nimport img from '../img.png'\r\nimport '../App.css';\r\nimport NavCol from '../components/NavCol';\r\n\r\nfunction SignupConfirm() {\r\n  return (\r\n    <div className=\"bg-light\">\r\n      <NavCol />\r\n      <Container className=\"justify-content-center card-div\">\r\n        <Card className=\"home-card\">\r\n            <Card.Body>\r\n                <Card.Title align=\"center\">\r\n                    <img alt=\"Complete\" src={img} width=\"60\" className=\"pb-3\" /> <br />\r\n                    You Successfully Signed Up!\r\n                </Card.Title>\r\n                <Card.Subtitle align=\"center\" className=\"mb-2 text-muted size-12\">Please go to Sign In page to login.</Card.Subtitle>\r\n                <Form>\r\n                    <Row>\r\n                        <Col>\r\n                          <Link to=\"/login\">\r\n                            <button className=\"btn-backtosignin\" type=\"submit\">SIGN IN</button>\r\n                          </Link>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </Card.Body>\r\n        </Card>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignupConfirm;\r\n","export default __webpack_public_path__ + \"static/media/arrow-popout.306421d4.svg\";","import React, { useEffect, useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Card from 'react-bootstrap/Card';\r\nimport axios from 'axios';\r\nimport './App.css';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport NavCol from './components/NavCol';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport ArrowPopout from './arrow-popout.svg';\r\n\r\n\r\n\r\nfunction Analytics() {\r\n\r\n    const columns = [\r\n        {\r\n            field: 'id',\r\n            headerName: 'ID',\r\n            width: 91,\r\n            sortable: true,\r\n        },\r\n        {\r\n          field: 'collectionpoint',\r\n          headerName: 'Collection Point',\r\n          width: 179,\r\n          sortable: true,\r\n        },\r\n        {\r\n          field: 'collectedby',\r\n          headerName: 'Collected By',\r\n          width: 160,\r\n          sortable: true,\r\n        },\r\n        {\r\n          field: 'wastetype',\r\n          headerName: 'Waste Type',\r\n          width: 130,\r\n          sortable: false,\r\n        },\r\n        {\r\n          field: 'collectingequipment',\r\n          headerName: 'Equipment',\r\n          width: 140,\r\n          sortable: false,\r\n        },\r\n        {\r\n          field: 'quantity',\r\n          headerName: 'Quantity',\r\n          width: 130,\r\n          sortable: true,\r\n        },\r\n        {\r\n          field: 'dateandtime',\r\n          headerName: 'Date & Time',\r\n          width: 250,\r\n          sortable: true,\r\n        },\r\n        {\r\n          field: 'tippingpoint',\r\n          headerName: 'Tipping Point',\r\n          width: 165,\r\n          sortable: true,\r\n        },\r\n        {\r\n          field: 'blockId',\r\n          headerName: 'Block ID',\r\n          width: 130,\r\n          sortable: true,\r\n        },\r\n        {\r\n          field: 'transactionHash',\r\n          headerName: ' ',\r\n          width: 50,\r\n          sortable: false,\r\n          renderCell: (params) => {\r\n            if (params.value === \"\"){\r\n              return null;\r\n            }else {\r\n              return (\r\n                <OverlayTrigger\r\n                  key='bottom-1'\r\n                  placement='bottom'\r\n                  overlay={\r\n                    <Tooltip id='tooltip-connected'>\r\n                      <strong>View on Etherscan</strong>.\r\n                    </Tooltip>\r\n                  }\r\n                >\r\n                  <div>\r\n                    <a className=\"rop-link\" href={`https://ropsten.etherscan.io/tx/${params.value}`} target=\"_blank\" rel=\"noreferrer\"><img src={ArrowPopout} alt=\"\" /></a>\r\n                  </div>\r\n                </OverlayTrigger>\r\n              );\r\n            }\r\n          },\r\n        },\r\n    ];\r\n\r\n    \r\n    // const [show, setshow] = useState(false);\r\n    const [reviewData, setreviewData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:3001/analytics').then(\r\n            (response) => {\r\n                setreviewData( response.data.result);\r\n            }\r\n        ).catch(\r\n            (err) => {\r\n                console.log(err);\r\n                // setshow(true);\r\n                // setreviewStatus(err.message);\r\n            }\r\n        )\r\n    },[reviewData])\r\n\r\n      \r\n    return (\r\n        <div className=\"bg-light\">\r\n            <NavCol />\r\n            <Container fluid className=\"col-lg-12 col-md-12 col-sm-12 card-div\">\r\n                <Card className=\"w-100\">\r\n                    <DataGrid autoHeight \r\n                        rows={reviewData}\r\n                        columns={columns}\r\n                        pageSize={10}\r\n                    />\r\n                </Card>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Analytics;\r\n","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport { Link } from \"react-router-dom\";\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Form from 'react-bootstrap/Form';\r\nimport img from '../img.png'\r\nimport '../App.css';\r\nimport NavCol from '../components/NavCol';\r\n\r\n\r\nfunction LoginConfirm() {\r\n  return (\r\n    <div className=\"bg-light\">\r\n      <NavCol />\r\n      <Container className=\"justify-content-center card-div\">\r\n        <Card className=\"home-card\">\r\n            <Card.Body>\r\n                <Card.Title align=\"center\">\r\n                    <img alt=\"Complete\" src={img} width=\"60\" className=\"pb-3\" /> <br />\r\n                    You Successfully Signed In!\r\n                </Card.Title>\r\n                <Card.Subtitle align=\"center\" className=\"mb-2 text-muted size-12\">Please go to your Home Page</Card.Subtitle>\r\n                <Form>\r\n                    <Row>\r\n                        <Col>\r\n                          <Link to=\"/dash\">\r\n                            <button className=\"btn-backtosignin\" type=\"submit\">Home</button>\r\n                          </Link>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </Card.Body>\r\n        </Card>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginConfirm;\r\n","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './App.css';\r\nimport { Redirect } from 'react-router';\r\n\r\n\r\nfunction Dash() {\r\n    const acctype = (sessionStorage.getItem(\"acctype\"));\r\n    const isAuth = (sessionStorage.getItem(\"isAuth\"));\r\n\r\n    if(isAuth){\r\n        if(acctype === \"Admin\"){\r\n            return(\r\n                <Redirect to=\"/reviewform\" />\r\n            );\r\n        } \r\n        if(acctype === \"Collector\") {\r\n            return(\r\n                <Redirect to=\"/collectionform\" />\r\n            );\r\n        } \r\n    }else{\r\n        return(\r\n            <Redirect to=\"/\" />\r\n        );\r\n    }\r\n       \r\n}\r\n\r\nexport default Dash;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nfunction AdminRoute({ component:Component, ...rest}) {\r\n    const acctype = (sessionStorage.getItem(\"acctype\"));\r\n    const isAuth = (sessionStorage.getItem(\"isAuth\"));\r\n    return (\r\n        <Route \r\n            {...rest}\r\n            render={(props) => {\r\n                if(isAuth){\r\n                    if(acctype === \"Admin\"){\r\n                        return(\r\n                            <Component />\r\n                        );\r\n                    }else if (acctype === \"Collector\"){\r\n                        return(\r\n                            <Redirect to={{ pathname: \"/collectionform\", state: {from: props.location} }} />\r\n                        );\r\n                    }\r\n                } else {\r\n                    return(\r\n                        <Redirect to={{ pathname: \"/\", state: {from: props.location} }} />\r\n                    );\r\n                }\r\n            }}\r\n        />\r\n    );\r\n}\r\n\r\nexport default AdminRoute;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nfunction CollectorRoute({ component:Component, ...rest}) {\r\n    const acctype = (sessionStorage.getItem(\"acctype\"));\r\n    const isAuth = (sessionStorage.getItem(\"isAuth\"));\r\n    return (\r\n        <Route \r\n            {...rest}\r\n            render={(props) => {\r\n                if(isAuth){\r\n                    if(acctype === \"Admin\"){\r\n                        return(\r\n                            <Redirect to={{ pathname: \"/reviewform\", state: {from: props.location} }} />\r\n                        );\r\n                    }else if (acctype === \"Collector\"){\r\n                        return(\r\n                            <Component />\r\n                        );\r\n                    }\r\n                } else {\r\n                    return(\r\n                        <Redirect to={{ pathname: \"/\", state: {from: props.location} }} />\r\n                    );\r\n                }\r\n            }}\r\n        />\r\n    );\r\n}\r\n\r\nexport default CollectorRoute;","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport { Link } from \"react-router-dom\";\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Form from 'react-bootstrap/Form';\r\nimport img from '../img.png'\r\nimport '../App.css';\r\nimport NavCol from '../components/NavCol';\r\n\r\nfunction AlreadyLoggedin() {\r\n  return (\r\n    <div className=\"bg-light\">\r\n      <NavCol />\r\n      <Container className=\"justify-content-center card-div\">\r\n        <Card className=\"home-card\">\r\n            <Card.Body>\r\n                <Card.Title align=\"center\">\r\n                    <img alt=\"Complete\" src={img} width=\"60\" className=\"pb-3\" /> <br />\r\n                    You are already successfully Signed In!\r\n                </Card.Title>\r\n                <Card.Subtitle align=\"center\" className=\"mb-2 text-muted size-12\">Please go to your Home Page</Card.Subtitle>\r\n                <Form>\r\n                    <Row>\r\n                        <Col>\r\n                          <Link to=\"/dash\">\r\n                            <button className=\"btn-backtosignin\" type=\"submit\">Home</button>\r\n                          </Link>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </Card.Body>\r\n        </Card>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AlreadyLoggedin;\r\n","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport { Link } from \"react-router-dom\";\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Form from 'react-bootstrap/Form';\r\nimport img from '../img.png'\r\nimport '../App.css';\r\nimport NavCol from '../components/NavCol';\r\n\r\nfunction LogoutConfirm() {\r\n  return (\r\n    <div className=\"bg-light\">\r\n        <NavCol />\r\n        <Container className=\"justify-content-center card-div\">\r\n            <Card className=\"home-card\">\r\n                <Card.Body>\r\n                    <Card.Title align=\"center\">\r\n                        <img alt=\"Complete\" src={img} width=\"60\" className=\"pb-3\" /> <br />\r\n                        You Successfully Signed Out!\r\n                    </Card.Title>\r\n                    <Card.Subtitle align=\"center\" className=\"mb-2 text-muted size-12\">Please go to Sign In page to login Agian!</Card.Subtitle>\r\n                    <Form>\r\n                        <Row>\r\n                            <Col>\r\n                            <Link to=\"/login\">\r\n                                <button className=\"btn-backtosignin\" type=\"submit\">Sign in</button>\r\n                            </Link>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Card.Body>\r\n            </Card>\r\n        </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LogoutConfirm;\r\n","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport CollectionForm from './pages/CollectionForm';\r\nimport ReviewForm from './pages/ReviewForm';\r\nimport ForgotPassword from './pages/ForgotPassword';\r\nimport Home from './pages/Home';\r\nimport Login from './pages/Login';\r\nimport Signup from './pages/Signup';\r\nimport PasswordConfirm from './pages/confirmation/PasswordConfirm';\r\nimport SignupConfirm from './pages/confirmation/SignupConfirm';\r\nimport Analytics from './pages/Analytics';\r\nimport LoginConfirm from './pages/confirmation/LoginConfirm';\r\nimport Dash from './pages/Dash';\r\nimport AdminRoute from './pages/routes/AdminRoute';\r\nimport CollectorRoute from './pages/routes/CollectorRoute';\r\nimport AlreadyLoggedin from './pages/confirmation/AlreadyLoggedin';\r\nimport LogoutConfirm from './pages/confirmation/LogoutConfirm';\r\n\r\n\r\nfunction App() {\r\n\r\n  return (\r\n      <div>\r\n        \r\n        <Router>\r\n          <Switch>\r\n            <Route path=\"/\" exact component={Home} />\r\n            <Route path=\"/dash\" exact component={Dash} />\r\n            <CollectorRoute path=\"/collectionform\" exact component={CollectionForm} />\r\n            <AdminRoute path=\"/reviewform\" component={ReviewForm} />\r\n            <Route path=\"/signup\" exact component={Signup} />\r\n            <Route path=\"/forgotpassword\" exact component={ForgotPassword} />\r\n            <Route path=\"/passwordconfirm\" exact component={PasswordConfirm} />\r\n            <Route path=\"/signupconfirm\" exact component={SignupConfirm} />\r\n            <Route path=\"/loginconfirm\" exact component={LoginConfirm} />\r\n            <Route path=\"/alreadyloggedin\" exact component={AlreadyLoggedin} />\r\n            <Route path=\"/login\" exact component={Login} />\r\n            <Route path=\"/analytics\" exact component={Analytics} />\r\n            <Route path=\"/logoutconfirm\" exact component={LogoutConfirm} />\r\n          </Switch>\r\n        </Router>\r\n\r\n        {/* <Footer /> */}\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}